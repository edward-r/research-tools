name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Detect Python dep files (to enable pip cache if present)
        id: pdeps
        shell: bash
        run: |
          shopt -s globstar nullglob
          files=(requirements.txt **/requirements.txt **/pyproject.toml)
          matches=()
          for f in "${files[@]}"; do [ -f "$f" ] && matches+=("$f"); done
          if [ ${#matches[@]} -gt 0 ]; then
            {
              echo "found=true"
              echo "files<<EOF"
              printf '%s\n' "${matches[@]}"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Use Python 3.11 (cached)
        if: steps.pdeps.outputs.found == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: ${{ steps.pdeps.outputs.files }}

      - name: Use Python 3.11 (no cache)
        if: steps.pdeps.outputs.found != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps (if requirements.txt exists)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt — skipping pip install."
          fi

      - name: Build kits to repo root
        run: npm run kits:build

      - name: Run demo watcher (JS + guarded PY)
        run: |
          echo "=== Running watcher:demo ==="
          if npm run | grep -q "watcher:demo"; then
            npm run watcher:demo || { echo "❌ watcher:demo failed"; exit 1; }
          else
            echo "⚠️ Skipping watcher:demo (script not found in package.json)"
          fi

      - name: Python availability check (informational)
        run: |
          if command -v python3 >/dev/null 2>&1; then
            echo "✅ python3 detected; Python watcher executed (if script enabled)."
          else
            echo "⚠️ python3 not available; Python watcher skipped."
          fi

      # ---- Upload logs & Evidence Logs as artifacts ----
      - name: Upload watcher/demo artifacts
        uses: actions/upload-artifact@v4
        with:
          name: watcher-logs-${{ github.run_id }}
          if-no-files-found: warn
          path: |
            DEMO_JS_AsyncPatterns_NODEONLY/logs/**/*.log
            DEMO_JS_AsyncPatterns_NODEONLY/logs/*.log
            DEMO_JS_AsyncPatterns_NODEONLY/notes/*EvidenceLog.md
            PROJECT_NAME_NODEONLY/logs/**/*.log
            PROJECT_NAME_NODEONLY/logs/*.log
            PROJECT_NAME_NODEONLY/notes/*EvidenceLog.md
